<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu 20.04/22.04上SST模拟器的安装</title>
      <link href="/2023/12/19/Ubuntu-20-04-22-04%E4%B8%8ASST%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2023/12/19/Ubuntu-20-04-22-04%E4%B8%8ASST%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>最近更换了研究方向，需要安装SST模拟器，SST模拟器的安装过程比较复杂，这里记录一下安装过程。</p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>由于课题工作需要，因此仅安装了sst-element中部分组件，本文主要参考<a href="http://sst-simulator.org/SSTPages/SSTBuildAndInstall_13dot1dot0_SeriesDetailedBuildInstructions/">SST模拟器详细安装教程</a>和<a href="http://sst-simulator.org/SSTPages/SSTBuildAndInstall_13dot1dot0_SeriesAdditionalExternalComponents/">SST模拟器附加组件安装教程</a>，并在此基础上针对个人需求进行了一定的修改。</p><table><thead><tr><th>软件名称</th><th>软件版本</th></tr></thead><tbody><tr><td>Ubuntu</td><td>20.04&#x2F;22.04</td></tr><tr><td>SST</td><td>13.0.0&#x2F;13.1.0</td></tr></tbody></table><h2 id="2-安装SST模拟器"><a href="#2-安装SST模拟器" class="headerlink" title="2. 安装SST模拟器"></a>2. 安装SST模拟器</h2><h3 id="2-1-安装前的准备"><a href="#2-1-安装前的准备" class="headerlink" title="2.1 安装前的准备"></a>2.1 安装前的准备</h3><p>首先我们需要安装一些必要的软件，这样才能使得SST能够正常的编译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gcc g++ build essential make cmake autoconf automake git libtool doxygen patch</span><br></pre></td></tr></table></figure><p>SST推荐的源码下载目录为<code>$HOME/scratch/src</code>，安装目录为<code>$HOME/local/packages</code>，因此我们需要创建这些目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/scratch/src</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/local/packages</span><br></pre></td></tr></table></figure><p>SST推荐安装MPI库，这样就可以通过MPI进行并行计算，官方推荐使用OpenMPI版本的对应关系详见<a href="http://sst-simulator.org/SSTPages/SSTElementReleaseMatrix/">Release Matrix</a>，由于我在学习SST模拟器的同时还想熟悉MPI编程，因此我选择将OpenMPI安装在系统中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.4.tar.gz</span><br><span class="line">tar -zxvf openmpi-4.1.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openmpi-4.1.4</span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;# MPI \n</span></span><br><span class="line"><span class="string">MPI_HOME=/usr/local/openmpi \n</span></span><br><span class="line"><span class="string">export PATH=$MPI_HOME/bin:$PATH \n</span></span><br><span class="line"><span class="string">export LD_LIBRARY_PATH=$MPI_HOME/lib:$LD_LIBRARY_PATH \n</span></span><br><span class="line"><span class="string">export MANPATH=$MPI_HOME/share/man:$MANPATH \n</span></span><br><span class="line"><span class="string">export PATH=$MPIHOME/bin:$PATH&#x27;</span> | sudo <span class="built_in">tee</span> -a /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">./configure --prefix=<span class="variable">$MPIHOME</span></span><br><span class="line">sudo make all install</span><br></pre></td></tr></table></figure><p>SST-Core官方提供了HDF5支持，但是根据由于链接问题，在linux上无法安装，github上也有人提出了Issue，因此本次就不安装HDF5。</p><h3 id="2-2-安装SST-Core"><a href="#2-2-安装SST-Core" class="headerlink" title="2.2 安装SST-Core"></a>2.2 安装SST-Core</h3><p>SST Core安装到官方推荐的目录就好</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://github.com/sstsimulator/sst-core/releases/download/v13.1.0_Final/sstcore-13.1.0.tar.gz</span><br><span class="line">tar -zxvf sstcore-13.1.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src/sstcore-13.1.0</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;# SST Core \n</span></span><br><span class="line"><span class="string">export SST_CORE_HOME=$HOME/local/sstcore-13.1.0\n</span></span><br><span class="line"><span class="string">export SST_CORE_ROOT=$HOME/scratch/src/sstcore-13.1.0\n</span></span><br><span class="line"><span class="string">export PATH=$SST_CORE_HOME/bin:$PATH</span></span><br><span class="line"><span class="string">&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line">make all -j$(<span class="built_in">nproc</span>)</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>对SST-Core的安装进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> sst</span><br><span class="line">sst --version</span><br><span class="line">sst-info</span><br><span class="line">sst-test-core</span><br></pre></td></tr></table></figure><h3 id="2-3-安装SST-Elements"><a href="#2-3-安装SST-Elements" class="headerlink" title="2.3 安装SST-Elements"></a>2.3 安装SST-Elements</h3><p>SST-Elements的源码同样要下载到官方推荐的目录，并解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://github.com/sstsimulator/sst-elements/releases/download/v13.1.0_Final/sstelements-13.1.0.tar.gz</span><br><span class="line">tar -zxvf sstelements-13.1.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src/sstelements-13.1.0/sst-elements-library-13.1.0</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;# SST Elements \n</span></span><br><span class="line"><span class="string">export SST_ELEMENTS_HOME=$HOME/local/sstelements-13.1.0\n</span></span><br><span class="line"><span class="string">export SST_ELEMENTS_ROOT=$HOME/scratch/src/sstelements-13.1.0/sst-elements-library-13.1.0\n</span></span><br><span class="line"><span class="string">export PATH=$SST_ELEMENTS_HOME/bin:$PATH</span></span><br><span class="line"><span class="string">&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="2-4-安装SST-Elements附加组件"><a href="#2-4-安装SST-Elements附加组件" class="headerlink" title="2.4 安装SST-Elements附加组件"></a>2.4 安装SST-Elements附加组件</h3><h4 id="2-4-1-安装DRAMSim2-2-2-2"><a href="#2-4-1-安装DRAMSim2-2-2-2" class="headerlink" title="2.4.1 安装DRAMSim2 2.2.2"></a>2.4.1 安装DRAMSim2 2.2.2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://codeload.github.com/dramninjasUMD/DRAMSim2/tar.gz/refs/tags/v2.2.2</span><br><span class="line">tar xfz v2.2.2.tar.gz</span><br><span class="line"><span class="built_in">mv</span> DRAMSim2-2.2.2 DRAMSim2</span><br><span class="line"><span class="built_in">cd</span> DRAMSim2</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#DRAMSim \n</span></span><br><span class="line"><span class="string">export DRAMSIM2_HOME=$HOME/local/packages/DRAMSim2&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line">make libdramsim.so</span><br><span class="line"><span class="built_in">cp</span> -r . <span class="variable">$DRAMSIM2_HOME</span></span><br></pre></td></tr></table></figure><h4 id="2-4-2-安装NVDIMMSim-2-0-0"><a href="#2-4-2-安装NVDIMMSim-2-0-0" class="headerlink" title="2.4.2 安装NVDIMMSim 2.0.0"></a>2.4.2 安装NVDIMMSim 2.0.0</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">tar xfz NVDIMMSim-2.0.0.tar.gz</span><br><span class="line">wget https://github.com/jimstevens2001/NVDIMMSim/archive/v2.0.0.tar.gz</span><br><span class="line"><span class="built_in">mv</span> NVDIMMSim-2.0.0 NVDIMMSim</span><br><span class="line"><span class="built_in">cd</span> NVDIMMSim/src</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#NVDIMMSim \n</span></span><br><span class="line"><span class="string">export NVDIMMSIM_HOME=$HOME/local/packages/NVDIMMSim&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line">make libnvdsim.so</span><br><span class="line"><span class="built_in">cp</span> -r . <span class="variable">$NVDIMMSIM_HOME</span></span><br></pre></td></tr></table></figure><h4 id="2-4-3-安装HybridSim-2-0-1"><a href="#2-4-3-安装HybridSim-2-0-1" class="headerlink" title="2.4.3 安装HybridSim 2.0.1"></a>2.4.3 安装HybridSim 2.0.1</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://github.com/jimstevens2001/HybridSim/archive/v2.0.1.tar.gz</span><br><span class="line">tar xfz HybridSim-2.0.1.tar.gz</span><br><span class="line"><span class="built_in">mv</span> HybridSim-2.0.1 HybridSim</span><br><span class="line"><span class="built_in">cd</span> HybridSim</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#NVDIMMSim \n</span></span><br><span class="line"><span class="string">export HYBRIDSIM_HOME=$HOME/local/packages/HybridSim&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line">make libhybridsim.so</span><br><span class="line"><span class="built_in">cp</span> -r . <span class="variable">$HYBRIDSIM_HOME</span></span><br></pre></td></tr></table></figure><h4 id="2-4-4-安装DRAMsim3"><a href="#2-4-4-安装DRAMsim3" class="headerlink" title="2.4.4 安装DRAMsim3"></a>2.4.4 安装DRAMsim3</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://github.com/umd-memsys/DRAMsim3/archive/refs/tags/1.0.0.tar.gz</span><br><span class="line">tar xfz dramsim3-1.0.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> dramsim3-1.0.0</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#NVDIMMSim \n</span></span><br><span class="line"><span class="string">export DRAMSIM3_HOME=$HOME/local/packages/dramsim3&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cp</span> -r . <span class="variable">$DRAMSIM3_HOME</span></span><br></pre></td></tr></table></figure><h4 id="2-4-5-安装Intel-Pin-Tool-3-26-98690"><a href="#2-4-5-安装Intel-Pin-Tool-3-26-98690" class="headerlink" title="2.4.5 安装Intel Pin Tool 3.26-98690"></a>2.4.5 安装Intel Pin Tool 3.26-98690</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">wget https://software.intel.com/sites/landingpage/pintool/downloads/pin-3.26-98690-g1fc9d60e6-gcc-linux.tar.gz</span><br><span class="line">tar -zxvf pin-3.26-98690-g1fc9d60e6-gcc-linux.tar.gz</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#Intel Pin Tool \n</span></span><br><span class="line"><span class="string">export PIN_HOME=$HOME/local/packages/pin-3.26-98690-g1fc9d60e6-gcc-linux \n</span></span><br><span class="line"><span class="string">export INTEL_PIN_DIRECTORY=$PIN_HOME&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="2-4-6-安装Goblin-HMCSim"><a href="#2-4-6-安装Goblin-HMCSim" class="headerlink" title="2.4.6 安装Goblin HMCSim"></a>2.4.6 安装Goblin HMCSim</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">https://github.com/tactcomplabs/gc64-hmcsim/archive/refs/tags/sst-8.0.0-release.zip</span><br><span class="line">unzip gc64-hmcsim-sst-8.0.0-release.zip</span><br><span class="line"><span class="built_in">cd</span> gc64-hmcsim-sst-8.0.0-release</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#Goblin HMCSim \n</span></span><br><span class="line"><span class="string">export GOBLINHMCSIM_HOME=$HOME/local/packages/GoblinHMCSim \n&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">ln</span> -s `<span class="built_in">pwd</span>` <span class="variable">$GOBLINHMCSIM_HOME</span></span><br></pre></td></tr></table></figure><h4 id="2-4-7-安装HBM-Dramsim2"><a href="#2-4-7-安装HBM-Dramsim2" class="headerlink" title="2.4.7 安装HBM Dramsim2"></a>2.4.7 安装HBM Dramsim2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tactcomplabs/HBM.git</span><br><span class="line"><span class="built_in">cd</span> HBM</span><br><span class="line">git checkout hbm-1.0.0-release</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#HBM Dramsim2 \n</span></span><br><span class="line"><span class="string">export HBMDRAMSIM2_HOME=$HOME/local/packages/HBMDramsim2 \n&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">ln</span> -s `<span class="built_in">pwd</span>` <span class="variable">$HBMDRAMSIM2_HOME</span></span><br></pre></td></tr></table></figure><h4 id="2-4-8-安装Ramulator"><a href="#2-4-8-安装Ramulator" class="headerlink" title="2.4.8 安装Ramulator"></a>2.4.8 安装Ramulator</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span>/scratch/src</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/CMU-SAFARI/ramulator.git</span><br><span class="line"><span class="built_in">cd</span> ramulator</span><br><span class="line">git checkout 7d2e72306c6079768e11a1867eb67b60cee34a1c</span><br><span class="line">patch -p1 -i ramulator_sha_7d2e723_gcc48Patch.patch</span><br><span class="line">patch -p1 -i ramulator_sha_7d2e723_libPatch.patch</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;#Ramulator \n</span></span><br><span class="line"><span class="string">export RAMULATOR_HOME=$HOME/local/packages/ramulator \n&#x27;</span> | <span class="built_in">tee</span> -a ~/.bashrc</span><br><span class="line">make CXX=g++ libramulator.so -j$(<span class="built_in">nproc</span>)</span><br></pre></td></tr></table></figure><h3 id="2-5-编译安装SST-Elements"><a href="#2-5-编译安装SST-Elements" class="headerlink" title="2.5 编译安装SST-Elements"></a>2.5 编译安装SST-Elements</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 官网给的教程部分有笔误，hbm dramsim2 应该是一个等号</span></span><br><span class="line">./configure --prefix=<span class="variable">$SST_ELEMENTS_HOME</span> --with-dramsim=<span class="variable">$DRAMSIM2_HOME</span> --with-nvdimmsim=<span class="variable">$NVDIMMSIM_HOME</span> --with-hybridsim=<span class="variable">$HYBRIDSIM_HOME</span> --with-dramsim3=<span class="variable">$DRAMSIM3_HOME</span> --with-pin=<span class="variable">$PIN_HOME</span> --with-goblinhmcsim=<span class="variable">$GOBLINHMCSIM_HOME</span> --with-hbmdramsim=<span class="variable">$HBMDRAMSIM2_HOME</span> --with-ramulator=<span class="variable">$RAMULATOR_HOME</span></span><br><span class="line">make all -j$(<span class="built_in">nproc</span>)</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>测试SST Elements</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> sst</span><br><span class="line">sst --version</span><br><span class="line">sst-info</span><br><span class="line">sst-test-elements -w <span class="string">&quot;*simple*&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模拟器 </category>
          
          <category> 安装教程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟器 </tag>
            
            <tag> 安装教程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/06/13/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/06/13/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>第一篇文章，就先说一下我建立这个博客的初衷吧。<br>作为一个计算机专业的学生，本来是希望通过学习web框架自己来写一个博客，但由于懒惰，就选择了Hexo框架。配置好Hexo环境后，又闲置了好久。这次希望能经常在博客上记录一些编程和配置环境时遇到的问题，以后方便查找吧。<br>PS：也有可能记录一些所思所想？<br>散会！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/15/hello-world/"/>
      <url>/2023/04/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
